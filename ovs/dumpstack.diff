diff --git a/lib/backtrace.c b/lib/backtrace.c
index 5cb2954..8061fab 100644
--- a/lib/backtrace.c
+++ b/lib/backtrace.c
@@ -16,6 +16,8 @@

 #include <config.h>
 #include <inttypes.h>
+#include <stdlib.h>
+#include <string.h>

 #include "backtrace.h"
 #include "openvswitch/vlog.h"
@@ -24,16 +26,38 @@ VLOG_DEFINE_THIS_MODULE(backtrace);

 #ifdef HAVE_BACKTRACE
 #include <execinfo.h>
+#define UNW_LOCAL_ONLY
+#include <libunwind.h>
+
+void dump_stack (void) {
+  unw_cursor_t cursor; unw_context_t uc;
+  unw_word_t ip, sp, offp;
+  char name[256];
+
+  unw_getcontext(&uc);
+  unw_init_local(&cursor, &uc);
+  while (unw_step(&cursor) > 0) {
+    unw_get_proc_name(&cursor, name, 256, &offp);
+    unw_get_reg(&cursor, UNW_REG_IP, &ip);
+    unw_get_reg(&cursor, UNW_REG_SP, &sp);
+    VLOG_INFO("func:%s ip:%lx sp:%lx\n", name, (long) ip, (long) sp);
+  }
+}
+
 void
 backtrace_capture(struct backtrace *b)
 {
     void *frames[BACKTRACE_MAX_FRAMES];
+    char **symbols;
     int i;

     b->n_frames = backtrace(frames, BACKTRACE_MAX_FRAMES);
+    symbols = backtrace_symbols(frames, b->n_frames);
     for (i = 0; i < b->n_frames; i++) {
         b->frames[i] = (uintptr_t) frames[i];
+        strcpy(b->symbols[i], symbols[i]);
     }
+    free(symbols);
 }

 #else
@@ -52,7 +76,8 @@ backtrace_format(const struct backtrace *b, struct ds *ds)

         ds_put_cstr(ds, " (backtrace:");
         for (i = 0; i < b->n_frames; i++) {
-            ds_put_format(ds, " 0x%08"PRIxPTR, b->frames[i]);
+            ds_put_format(ds, " %s", b->symbols[i]);
+            ds_put_format(ds, " 0x%08"PRIxPTR"\n", b->frames[i]);
         }
         ds_put_cstr(ds, ")");
     }
@@ -66,6 +91,13 @@ log_backtrace_at(const char *msg, const char *where)
     struct backtrace b;
     struct ds ds = DS_EMPTY_INITIALIZER;

+    for (int i = 0; i < BACKTRACE_MAX_FRAMES; i++) {
+        b.symbols[i] = malloc(64);
+        if (!b.symbols[i]) {
+            goto out;
+        }
+    }
+
     backtrace_capture(&b);
     if (msg) {
         ds_put_format(&ds, "%s ", msg);
@@ -75,4 +107,9 @@ log_backtrace_at(const char *msg, const char *where)
     VLOG_ERR("%s", backtrace_format(&b, &ds));

     ds_destroy(&ds);
+    dump_stack();
+out:
+    for (int i = 0; i < BACKTRACE_MAX_FRAMES; i++) {
+        free(b.symbols[i]);
+    }
 }
diff --git a/lib/backtrace.h b/lib/backtrace.h
index 3eb92f7..30ca4db 100644
--- a/lib/backtrace.h
+++ b/lib/backtrace.h
@@ -66,8 +66,10 @@
 struct backtrace {
     int n_frames;
     uintptr_t frames[BACKTRACE_MAX_FRAMES];
+    char *symbols[BACKTRACE_MAX_FRAMES];
 };

+void dump_stack(void);
 void backtrace_capture(struct backtrace *);
 void log_backtrace_at(const char *msg, const char *where);


